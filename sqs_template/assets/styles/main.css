/*
 * Web Starter Kit
 *
 * Multi-screen layout styles for your page. Brought to you by the
 * Web Starter Kit team.
 *
 */
/*
 * HTML5 Boilerplate
 *
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */
/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */
html, button, input, select, textarea {
  color: #222; }

body {
  font-size: 1em;
  line-height: 1.4; }

a {
  color: #00e; }

a:visited {
  color: #551a8b; }

a:hover {
  color: #06e; }

/*
 * Remove the gap between images and the bottom of their containers: h5bp.com/i/440
 */
img {
  vertical-align: middle; }

/*
 * Remove default fieldset styles.
 */
fieldset {
  border: 0;
  margin: 0;
  padding: 0; }

/*
 * Allow only vertical resizing of textareas.
 */
textarea {
  resize: vertical; }

/* ==========================================================================
   Author's custom styles
   ========================================================================== */
/* ==========================================================================
   Helper classes
   ========================================================================== */
/* Prevent callout */
.nocallout {
  -webkit-touch-callout: none; }

.pressed {
  background-color: rgba(0, 0, 0, 0.7); }

/* A hack for HTML5 contenteditable attribute on mobile */
textarea[contenteditable] {
  -webkit-appearance: none; }

/* A workaround for S60 3.x and 5.0 devices which do not animated gif images if
   they have been set as display: none */
.gifhidden {
  position: absolute;
  left: -100%; }

/*
 * Image replacement
 */
.ir {
  background-color: transparent;
  background-repeat: no-repeat;
  border: 0;
  direction: ltr;
  display: block;
  overflow: hidden;
  text-align: left;
  text-indent: -999em; }

.ir br {
  display: none; }

/*
 * Hide from both screenreaders and browsers: h5bp.com/u
 */
.hidden {
  display: none !important;
  visibility: hidden; }

/*
 * Hide only visually, but have it available for screenreaders: h5bp.com/v
 */
.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px; }

/*
 * Extends the .visuallyhidden class to allow the element to be focusable
 * when navigated to via the keyboard: h5bp.com/p
 */
.visuallyhidden.focusable:active, .visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto; }

/*
 * Hide visually and from screenreaders, but maintain layout
 */
.invisible {
  visibility: hidden; }

/**
 * Clearfix helper
 * Used to contain floats: h5bp.com/q
 */
.clearfix::before, .clearfix::after {
  content: "";
  display: table; }

.clearfix::after {
  clear: both; }

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   Theses examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */
/*
 * Visual Style Guide styles
 * Remove if you prefer to use a CSS library, like Bootstrap
 */
/* import like such
@import 'components/components';
*/
html, body {
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  background-color: #3a383e;
  color: #f4ead9; }

body {
  position: relative;
  font-family: 'Roboto Condensed', Helvetica, Arial, sans-serif;
  font-weight: 300;
  box-sizing: border-box;
  min-height: 100%; }

body.open {
  overflow: hidden; }

.app-bar {
  display: block;
  width: 100%;
  position: fixed;
  top: 0;
  left: 0;
  overflow: hidden;
  z-index: 1; }

.app-bar-container {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  height: 60px;
  position: relative;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  margin: 0 auto; }

.app-bar.open, .app-bar.open ~ main {
  -webkit-transform: translate(250px, 0);
  transform: translate(250px, 0); }

.app-bar .logo {
  -webkit-flex: 1;
  -ms-flex: 1;
  flex: 1;
  font-size: 2em;
  line-height: 0px !important;
  margin: 0 16px;
  padding: 0;
  color: transparent;
  float: none;
  max-width: none;
  font-weight: 300;
  display: initial; }

.app-bar .logo a {
  text-decoration: none;
  color: inherit;
  font-weight: normal; }

.app-bar-actions {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  z-index: 2; }

.promote-layer {
  /*
  This may promote the layer to a composited
  layer.

  Replace with will-change when available

  #perfmatters
  */
  -webkit-backface-visibility: hidden;
  backface-visibility: hidden; }

.base, p, ul, ol {
  font-size: 19px; }

.app-bar, main {
  transition: -webkit-transform 0.3s ease-out;
  transition: transform 0.3s ease-out; }

.navdrawer-container h4, .navdrawer-container ul li a {
  line-height: 1.4; }

.navdrawer-container h4 {
  background-color: white;
  color: #3367D6; }

.navdrawer-container ul {
  padding: 0;
  margin: 0;
  list-style-type: none; }

.navdrawer-container ul li a {
  display: block;
  text-decoration: none;
  transition: background-color 0.2s ease-out;
  white-space: nowrap; }

.navdrawer-container ul li {
  border-bottom-style: solid;
  border-width: 1px;
  border-color: white;
  padding: 0; }

.navdrawer-container ul li::before {
  content: none; }

.navdrawer-container ul li a:focus {
  outline: 0; }

main {
  margin: 0 auto;
  /* Height of the header */
  /*padding: 60px 16px 16px 16px;*/
  min-height: 100%; }
  main .separator {
    display: block;
    margin: 20px auto;
    content: '';
    width: 40px;
    height: 1px;
    background-color: #fff; }

/** Larger Screens - desktops and tablets **/
/*@media all and (min-width: 990px) {*/
@media all and (min-width: 1200px) {
  .app-bar {
    position: absolute; }
    .app-bar h1.logo {
      float: left;
      margin: 20px;
      padding: 0;
      width: 200px;
      display: block; }
      .app-bar h1.logo img.img-logo-black {
        opacity: 0;
        margin-top: -55px; }
      .app-bar h1.logo img.img-logo.background--light {
        opacity: 0; }
      .app-bar h1.logo img.img-logo.background--dark {
        opacity: 1; }
      .app-bar h1.logo img.img-logo-black.background--dark {
        opacity: 0; }
      .app-bar h1.logo img.img-logo-black.background--light {
        opacity: 1; }
    .app-bar h1.logo-mobile {
      display: none; }
  .app-bar.open, .app-bar.open ~ main {
    -webkit-transform: translate(0px, 0);
    transform: translate(0px, 0); }
  .app-bar-container {
    display: block;
    height: 130px;
    padding: 0 16px;
    box-sizing: border-box; }
  .app-bar-actions {
    float: right; }
  .app-bar::after {
    content: ' ';
    display: block;
    height: 0;
    overflow: hidden;
    clear: both; }
  button.menu {
    display: none; }
  .navdrawer-container {
    position: absolute;
    display: block;
    width: auto;
    height: 305px;
    margin-top: 0;
    transition: none;
    /*overflow-y: auto;*/
    top: 52%;
    -webkit-transform: translateY(-50%);
    transform: translateY(-50%);
    right: 20px;
    z-index: 1; }
    .navdrawer-container .nav-close {
      display: none; }
  .navdrawer-container h4 {
    display: none; }
  .navdrawer-container ul {
    margin: 0 auto;
    text-align: right; }
  .navdrawer-container ul li {
    border: none; }
    .navdrawer-container ul li.logo {
      display: none; }
  .navdrawer-container ul.background--dark li a {
    color: #fff; }
  .navdrawer-container ul.background--dark li a:after {
    border: 2px solid #fff; }
  .navdrawer-container ul.background--light li a {
    color: #000; }
  .navdrawer-container ul.background--light li a:after {
    border: 2px solid #000; }
  /*  .navdrawer-container ul.light li a {
    color: #000;
  }

  .navdrawer-container ul.light li a:after {
    border: 2px solid #000;
  }

  .navdrawer-container ul.dark li a {
    color: #fff;
  }

  .navdrawer-container ul.dark li a:after {
    border: 2px solid #fff;
  }*/
  .navdrawer-container ul li a {
    line-height: 40px;
    font-size: 15px;
    color: #ffffff;
    font-weight: bold;
    text-transform: uppercase;
    margin-right: 10px;
    letter-spacing: 1px; }
  .navdrawer-container ul li a:after {
    width: 10px;
    height: 10px;
    border: 2px solid #fff;
    border-radius: 50%;
    content: '';
    position: relative;
    display: inline-block;
    margin-left: 20px; }
  main {
    padding-top: 0;
    min-height: initial;
    width: 100%;
    height: 100%; }
  body {
    overflow-y: scroll; } }

/*mobile responsive*/
@media all and (max-width: 1199px) {
  /*mobile navigation*/
  .navdrawer-container {
    position: fixed;
    top: 0px;
    left: 0;
    width: 100%;
    height: 0;
    color: #fff;
    background-color: #3a383e;
    overflow: hidden;
    overflow-y: scroll;
    z-index: 9999;
    transition: height 0.4s ease-out, background-color 0.4s ease-out; }
  .navdrawer-container.open {
    height: 100%; }
  .navdrawer-container .nav-close {
    display: block;
    position: absolute;
    top: 10px;
    right: 15px;
    cursor: pointer; }
  .navdrawer-container ul {
    width: 100%;
    height: auto;
    padding: 0 120px;
    margin: 0;
    list-style-type: none;
    z-index: 2; }
    @media all and (max-width: 575px) {
      .navdrawer-container ul {
        padding: 0 50px; } }
    .navdrawer-container ul li {
      border-bottom-style: solid;
      border-width: 1px;
      border-color: #757478; }
      .navdrawer-container ul li.logo {
        display: block;
        padding: 30px 0; }
        .navdrawer-container ul li.logo a:hover {
          background-color: inherit; }
        .navdrawer-container ul li.logo a:focus {
          background-color: inherit;
          outline: 0; }
        .navdrawer-container ul li.logo a:active {
          background-color: inherit; }
      .navdrawer-container ul li a {
        display: block;
        height: 120px;
        padding: 0 20px;
        line-height: 120px;
        text-decoration: none;
        text-transform: uppercase;
        color: white;
        text-align: center;
        font-size: 24px;
        font-family: 'Gotham A', 'Gotham B';
        font-weight: normal; }
        .navdrawer-container ul li a:hover {
          background-color: rgba(255, 255, 255, 0.2); }
        .navdrawer-container ul li a:focus {
          background-color: rgba(255, 255, 255, 0.3);
          outline: 0; }
        .navdrawer-container ul li a:active {
          background-color: rgba(255, 255, 255, 0.4); }
  .app-bar {
    position: absolute; }
    .app-bar .app-bar-container {
      height: 150px;
      box-sizing: border-box; }
      .app-bar .app-bar-container h1.logo {
        display: none; }
      .app-bar .app-bar-container h1.logo-mobile {
        float: left;
        margin: 10px;
        padding: 0;
        width: 50px;
        display: block; }
      .app-bar .app-bar-container h1.logo-mobile img {
        width: 50px; }
      .app-bar .app-bar-container button.menu {
        background-image: none;
        background-color: transparent;
        border: none;
        padding: 0;
        position: absolute;
        right: 15px;
        top: 10px;
        transition: background-color 0.2s ease-out;
        -webkit-tap-highlight-color: transparent; }
        .app-bar .app-bar-container button.menu img {
          height: 24px;
          width: 24px; }
        .app-bar .app-bar-container button.menu:hover {
          background-color: rgba(255, 255, 255, 0.1); }
        .app-bar .app-bar-container button.menu:focus {
          background-color: rgba(255, 255, 255, 0.2);
          outline: 0; }
        .app-bar .app-bar-container button.menu:active {
          background-color: rgba(255, 255, 255, 0.4); }
  .app-bar::after {
    content: ' ';
    display: block;
    height: 0;
    overflow: hidden;
    clear: both; }
  main {
    padding-top: 0;
    min-height: initial;
    width: 100%;
    height: 100%; }
  body {
    overflow-y: scroll; } }

/* footer section */
footer {
  width: 100%;
  height: 140px;
  padding: 35px 40px;
  box-sizing: border-box;
  /*background-color: #dddbe1;*/ }
  @media only screen and (max-width: 767px) {
    footer {
      height: 200px; } }
  footer .inner {
    width: 100%;
    height: 70px;
    line-height: 70px; }
    footer .inner .copyright {
      float: left;
      width: 50%;
      text-align: left; }
      @media only screen and (max-width: 767px) {
        footer .inner .copyright {
          float: none;
          display: block;
          width: 100%;
          text-align: center; } }
    footer .inner .social {
      float: right;
      width: 50%;
      text-align: right; }
      @media only screen and (max-width: 767px) {
        footer .inner .social {
          float: none;
          display: block;
          width: 100%;
          text-align: center; } }
      footer .inner .social .mail {
        width: 70px;
        height: 70px;
        background-color: white;
        border-radius: 50px;
        display: inline-block;
        text-align: center;
        margin-right: 10px; }
      footer .inner .social .instagram {
        width: 70px;
        height: 70px;
        background-color: white;
        border-radius: 50px;
        display: inline-block;
        text-align: center; }


/*# sourceMappingURL=data:application/json;base64, */